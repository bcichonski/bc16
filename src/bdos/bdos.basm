;
                .org 0x0f00
;MAIN ENTRYPOINT
;&STACKHEAD <- STACKHEAD + 2
                .mv dsdi, :sys_stackhead
                mov cs, 0x00
                mov ci, 0x02
                cal :add16
                .mv dsdi, :sys_stackhead
                cal :poke16
;&HEAPHEAD <- 20288
                .mv dsdi, :sys_heaphead
                mov cs, 0x4f
                mov ci, 0x40
                cal :poke16
                cal :FMAIN00fc
                ret
;FUNCTIONS
;FUNCTION peek8
FPEEK80001:     nop
                mov a, 0x00
                cal :stackvar8gt16
                mov a, #csci
                mov cs, 0x00
                mov ci, a
                ret
;END OF FUNCTION peek8
;FUNCTION peek16
FPEEK160002:    nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, cs
                mov di, ci
                cal :peek16
                ret
;END OF FUNCTION peek16
;FUNCTION poke8
FPOKE80003:     nop
                mov a, 0x02
                cal :stackvar8gt8
                mov a, ci
                psh a
                mov a, 0x00
                cal :stackvar8gt16
                pop a
                mov #csci, a
                ret
;END OF FUNCTION poke8
;FUNCTION poke16
FPOKE160004:    nop
                mov a, 0x00
                cal :stackvar8gt16
                psh cs
                psh ci
                mov a, 0x02
                cal :stackvar8gt16
                pop di
                pop ds
                cal :poke16
                ret
;END OF FUNCTION poke16
;FUNCTION parsedecw
FPARSEDECW0005: nop
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x03
            cal :stackvar8st16
LABEL0006:      nop
                mov a, 0x02
                cal :stackvar8gt8
                mov a, cs
                or ci
                .mv csci, :LABEL0007
                jmp z, csci
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov a, 0x86
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x05
            cal :stackvar8st8
                mov a, 0x05
                cal :stackvar8gt8
                mov a, cs
                or  ci
                mov a, f
                and 0x01
                mov cs,0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0008
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x02
            cal :stackvar8st8
LABEL0008:      nop
                mov a, 0x05
                cal :stackvar8gt8
                mov a, cs
                or ci
                .mv csci, :LABEL0009
                jmp z, csci
                mov a, 0x05
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x30
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :sub16
            mov a, 0x05
            cal :stackvar8st8
                mov a, 0x03
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x0a
                cal :mul16
                        psh cs
                        psh ci
                mov a, 0x05
                cal :stackvar8gt8
                        pop di
                        pop ds
                cal :add16
            mov a, 0x03
            cal :stackvar8st16
LABEL0009:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x02
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x01
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :sub16
            mov a, 0x02
            cal :stackvar8st8
                .mv csci, :LABEL0006
                xor a
                jmp z, csci
LABEL0007:      nop
                mov a, 0x03
                cal :stackvar8gt16
                ret
                ret
;END OF FUNCTION parsedecw
;FUNCTION mfill
FMFILL000a:     nop
                mov a, 0x00
                cal :stackvar8gt16
                psh cs
                psh ci
                mov a, 0x04
                cal :stackvar8gt8
                psh a
                mov a, 0x02
                cal :stackvar8gt16
                pop a
                pop di
                pop ds
                cal :mfill
                ret
;END OF FUNCTION mfill
;FUNCTION mzero
FMZERO000b:     nop
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov a, 0x84
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x82
                cal :stackvar8gt16
            mov a, 0x02
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x04
            cal :stackvar8st8
                cal :FMFILL000a
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
                ret
;END OF FUNCTION mzero
;FUNCTION memcpy
FMEMCPY000c:    nop
                mov a, 0x04
                cal :stackvar8gt16
                psh cs
                psh ci
                mov a, 0x00
                cal :stackvar8gt16
                psh cs
                psh ci
                mov a, 0x02
                cal :stackvar8gt16
                pop di
                pop ds
                pop f
                pop a
                cal :mem_cpy
                ret
;END OF FUNCTION memcpy
;FUNCTION strpeek8
FSTRPEEK8000d:  nop
                mov a, 0x00
                cal :stackvar8gt16
                mov a, #csci
                mov cs, 0x00
                mov ci, a
                ret
;END OF FUNCTION strpeek8
;FUNCTION strpoke8
FSTRPOKE8000e:  nop
                mov a, 0x02
                cal :stackvar8gt8
                mov a, ci
                psh a
                mov a, 0x00
                cal :stackvar8gt16
                pop a
                mov #csci, a
                ret
;END OF FUNCTION strpoke8
;FUNCTION strnextword
FSTRNEXTWOR000f:nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, cs
                mov di, ci
                cal :nextword
                jmr nz,:strnnextw
                mov ds, 0x00
                mov di, 0x00
                strnnextw: mov cs, ds
                mov ci, di
                ret
;END OF FUNCTION strnextword
;FUNCTION strnlen8
FSTRNLEN80010:  nop
                mov a, 0x00
                cal :stackvar8gt16
                psh cs
                psh ci
                mov a, 0x02
                cal :stackvar8gt8
                mov cs, ci
                pop di
                pop ds
                cal :str_len8
                mov cs, 0x00
                ret
;END OF FUNCTION strnlen8
;FUNCTION strcpy
FSTRCPY0011:    nop
                mov a, 0x00
                cal :stackvar8gt16
                psh cs
                psh ci
                mov a, 0x02
                cal :stackvar8gt16
                pop di
                pop ds
                cal :str_cpy
                ret
;END OF FUNCTION strcpy
;FUNCTION strncpy
FSTRNCPY0012:   nop
                mov a, 0x00
                cal :stackvar8gt16
                psh cs
                psh ci
                mov a, 0x04
                cal :stackvar8gt8
                psh ci
                mov a, 0x02
                cal :stackvar8gt16
                pop a
                pop di
                pop ds
                cal :strncpy
                ret
;END OF FUNCTION strncpy
;FUNCTION strncmp
FSTRNCMP0013:   nop
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x06
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x0a
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 12
                    mov a, 0x0c
                    cal :stackheadrll8
                mov a, 0x8c
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FSTRPEEK8000d
    ;depth 1: STACKHEAD -= 12
                    mov a, 0x8c
                    cal :stackheadrll8
            mov a, 0x07
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 12
                    mov a, 0x0c
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FSTRPEEK8000d
    ;depth 1: STACKHEAD -= 12
                    mov a, 0x8c
                    cal :stackheadrll8
            mov a, 0x08
            cal :stackvar8st8
                mov a, 0x07
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                        psh cs
                        psh ci
                mov a, 0x08
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x04
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x00
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
            mov a, 0x09
            cal :stackvar8st8
LABEL0014:      nop
                mov a, 0x09
                cal :stackvar8gt8
                mov a, cs
                or ci
                .mv csci, :LABEL0015
                jmp z, csci
                mov a, 0x07
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov a, 0x08
                cal :stackvar8gt8
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                    cal :gt16
                    mov cs, 0x00
                    mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0016
                jmp z, csci
                mov cs, 0x00
                mov ci, 0xf0
            mov a, 0x06
            cal :stackvar8st8
                xor a
                .mv csci, :LABEL0017
                jmp z, csci
LABEL0016:      nop
                mov a, 0x07
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov a, 0x08
                cal :stackvar8gt8
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0018
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x0f
            mov a, 0x06
            cal :stackvar8st8
LABEL0018:      nop
LABEL0017:      nop
                mov a, 0x0a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x0a
            cal :stackvar8st16
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x02
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x02
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 12
                    mov a, 0x0c
                    cal :stackheadrll8
                mov a, 0x8c
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FSTRPEEK8000d
    ;depth 1: STACKHEAD -= 12
                    mov a, 0x8c
                    cal :stackheadrll8
            mov a, 0x07
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 12
                    mov a, 0x0c
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FSTRPEEK8000d
    ;depth 1: STACKHEAD -= 12
                    mov a, 0x8c
                    cal :stackheadrll8
            mov a, 0x08
            cal :stackvar8st8
                mov a, 0x06
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x07
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x08
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x0a
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov a, 0x04
                cal :stackvar8gt16
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
            mov a, 0x09
            cal :stackvar8st8
                .mv csci, :LABEL0014
                xor a
                jmp z, csci
LABEL0015:      nop
                mov a, 0x06
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x0a
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov a, 0x04
                cal :stackvar8gt16
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0019
                jmp z, csci
                mov a, 0x07
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                mov a, cs
                or ci
                .mv csci, :LABEL001a
                jmp z, csci
                mov cs, 0x00
                mov ci, 0xf0
            mov a, 0x06
            cal :stackvar8st8
                xor a
                .mv csci, :LABEL001b
                jmp z, csci
LABEL001a:      nop
                mov a, 0x08
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                mov a, cs
                or ci
                .mv csci, :LABEL001c
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x0f
            mov a, 0x06
            cal :stackvar8st8
LABEL001c:      nop
LABEL001b:      nop
LABEL0019:      nop
                mov a, 0x06
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION strncmp
;FUNCTION strnposc
FSTRNPOSC001d:  nop
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x05
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x07
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x09
            cal :stackvar8st8
LABEL001e:      nop
                mov a, 0x07
                cal :stackvar8gt8
                        psh cs
                        psh ci
                mov a, 0x05
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov a, 0x03
                cal :stackvar8gt16
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL001f
                jmp z, csci
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FSTRPEEK8000d
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
            mov a, 0x08
            cal :stackvar8st8
                mov a, 0x08
                cal :stackvar8gt8
                        psh cs
                        psh ci
                mov a, 0x02
                cal :stackvar8gt8
                        pop di
                        pop ds
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0020
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x07
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x09
            cal :stackvar8st8
                xor a
                .mv csci, :LABEL0021
                jmp z, csci
LABEL0020:      nop
                mov a, 0x08
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0022
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x07
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x09
            cal :stackvar8st8
LABEL0022:      nop
LABEL0021:      nop
                mov a, 0x05
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x05
            cal :stackvar8st16
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                .mv csci, :LABEL001e
                xor a
                jmp z, csci
LABEL001f:      nop
                mov a, 0x09
                cal :stackvar8gt8
                mov a, cs
                or ci
                .mv csci, :LABEL0023
                jmp z, csci
                mov a, 0x05
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x01
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :sub16
            mov a, 0x05
            cal :stackvar8st16
                xor a
                .mv csci, :LABEL0024
                jmp z, csci
LABEL0023:      nop
                mov cs, 0xff
                mov ci, 0xff
            mov a, 0x05
            cal :stackvar8st16
LABEL0024:      nop
                mov a, 0x05
                cal :stackvar8gt16
                ret
                ret
;END OF FUNCTION strnposc
;FUNCTION upchar
FUPCHAR0025:    nop
                mov a, 0x00
                cal :stackvar8gt8
                mov a, ci
                cal :upchar
                mov cs, 0x00
                mov ci, a
                ret
;END OF FUNCTION upchar
;FUNCTION upstring
FUPSTRING0026:  nop
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov a, 0x84
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FSTRPEEK8000d
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
            mov a, 0x02
            cal :stackvar8st8
LABEL0027:      nop
                mov a, 0x02
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                mov a, cs
                or ci
                .mv csci, :LABEL0028
                jmp z, csci
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                cal :FUPCHAR0025
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x03
                cal :stackvar8gt8
                        psh cs
                        psh ci
                mov a, 0x02
                cal :stackvar8gt8
                        pop di
                        pop ds
                    cal :eq16
                    mov cs, 0x00
                    dec a
                    mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0029
                jmp z, csci
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov a, 0x84
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x81
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FSTRPOKE8000e
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
LABEL0029:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov a, 0x84
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FSTRPEEK8000d
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
            mov a, 0x02
            cal :stackvar8st8
                .mv csci, :LABEL0027
                xor a
                jmp z, csci
LABEL0028:      nop
                ret
;END OF FUNCTION upstring
;FUNCTION strnextword
FSTRNEXTWOR000f:nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, cs
                mov di, ci
                cal :nextword
                mov cs, ds
                mov ci, di
                ret
;END OF FUNCTION strnextword
;FUNCTION putdigit
FPUTDIGIT002a:  nop
                mov a, 0x00
                cal :stackvar8gt8
                mov a, ci
                cal :printhex4
                ret
;END OF FUNCTION putdigit
;FUNCTION putb
FPUTB002b:      nop
                mov a, 0x00
                cal :stackvar8gt8
                mov a, ci
                cal :printhex8
                ret
;END OF FUNCTION putb
;FUNCTION putw
FPUTW002c:      nop
                mov a, 0x00
                cal :stackvar8gt16
                cal :printhex16
                ret
;END OF FUNCTION putw
;FUNCTION putwnl
FPUTWNL002d:    nop
                mov a, 0x00
                cal :stackvar8gt16
                cal :printhex16
                cal :print_newline
                ret
;END OF FUNCTION putwnl
;FUNCTION putnl
FPUTNL002e:     nop
                cal :print_newline
                ret
;END OF FUNCTION putnl
;FUNCTION puts
FPUTS002f:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, cs
                mov di, ci
                cal :printstr
                ret
;END OF FUNCTION puts
;FUNCTION putsnl
FPUTSNL0030:    nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, cs
                mov di, ci
                cal :printstr
                cal :print_newline
                ret
;END OF FUNCTION putsnl
;FUNCTION readsn
FREADSN0031:    nop
                mov a, 0x00
                cal :stackvar8gt16
                psh cs
                psh ci
                mov a, 0x02
                cal :stackvar8gt8
                pop di
                pop ds
                cal :readstr
                ret
;END OF FUNCTION readsn
;FUNCTION putdecw
FPUTDECW0032:   nop
                mov cs, 0x27
                mov ci, 0x10
            mov a, 0x03
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x05
            cal :stackvar8st8
LABEL0033:      nop
                mov a, 0x03
                cal :stackvar8gt16
                mov a, cs
                or ci
                .mv csci, :LABEL0034
                jmp z, csci
                mov a, 0x00
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov a, 0x03
                cal :stackvar8gt16
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :div16
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov a, 0x02
                cal :stackvar8gt8
                        psh cs
                        psh ci
                mov a, 0x03
                cal :stackvar8gt16
                        pop di
                        pop ds
                cal :mul16
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :sub16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x02
                cal :stackvar8gt8
                        psh cs
                        psh ci
                mov a, 0x03
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :eq16
                mov cs, 0x00
                mov ci, a
                        pop di
                        pop ds
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0035
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x05
            cal :stackvar8st8
LABEL0035:      nop
                mov a, 0x05
                cal :stackvar8gt8
                mov a, cs
                or ci
                .mv csci, :LABEL0036
                jmp z, csci
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                cal :FPUTDIGIT002a
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
LABEL0036:      nop
                mov a, 0x03
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x0a
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :div16
            mov a, 0x03
            cal :stackvar8st16
                .mv csci, :LABEL0033
                xor a
                jmp z, csci
LABEL0034:      nop
                ret
;END OF FUNCTION putdecw
;FUNCTION putdecwnl
FPUTDECWNL0037: nop
    ;depth 2: STACKHEAD += 2
                    mov a, 0x02
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPUTDECW0032
    ;depth 1: STACKHEAD -= 2
                    mov a, 0x82
                    cal :stackheadrll8
                cal :print_newline
                ret
;END OF FUNCTION putdecwnl
;FUNCTION printf
FPRINTF0038:    nop
                mov a, 0x02
                cal :stackvar8gt16
                cal :inc16
                mov cs, ds
                mov ci, di
                .mv dsdi, :sys_stdprntf
                cal :poke16
LABEL0039:      nop
                mov a, 0x02
                cal :stackvar8gt16
                mov a, cs
                or ci
                .mv csci, :LABEL003a
                jmp z, csci
                mov a, 0x02
                cal :stackvar8gt16
                mov a, #csci
                psh a
                .mv csci, :stdprntf_end
                jmp z, csci
                mov ci, 0x25
                sub ci
                jmr z, :stdprntf_frmt
                pop a
                mov cs, 0x01
                out #cs, a
                .mv csci, :stdprntf_next
                xor a
                jmp z, csci
                stdprntf_frmt: pop a
                mov a, 0x02
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x02
            cal :stackvar8st16
                mov a, #csci
                psh a
                mov ci, 0x25
                sub ci
                jmr nz, :stdprntf_nprc
                pop a
                mov cs, 0x01
                out #cs, a
                .mv csci, :stdprntf_next
                xor a
                jmp z, csci
                stdprntf_nprc: nop
                mov cs, 0x00
                mov ci, 0x6e
                pop a
                psh a
                sub ci
                jmr nz, :stdprntf_nnwl
                cal :print_newline
                .mv csci, :stdprntf_nxtf
                xor a
                jmp z, csci
                stdprntf_nnwl: nop
                mov cs, 0x00
                mov ci, 0x78
                pop a
                psh a
                sub ci
                jmr nz, :stdprntf_nh8
                .mv dsdi, :sys_stdprntf
                cal :peek16
                mov ds, cs
                mov di, ci
                cal :peek16
                psh ci
                cal :inc16
                mov cs, ds
                mov ci, di
                .mv dsdi, :sys_stdprntf
                cal :poke16
                pop a
                cal :printhex8
                .mv csci, :stdprntf_nxtf
                xor a
                jmp z, csci
                stdprntf_nh8: nop
                mov cs, 0x00
                mov ci, 0x77
                pop a
                psh a
                sub ci
                jmr nz, :stdprntf_nh16
                .mv dsdi, :sys_stdprntf
                cal :peek16
                mov ds, cs
                mov di, ci
                cal :peek16
                psh ci
                psh cs
                cal :inc16
                mov cs, ds
                mov ci, di
                .mv dsdi, :sys_stdprntf
                cal :poke16
                pop cs
                pop ci
                cal :printhex16
                .mv csci, :stdprntf_nxtf
                xor a
                jmp z, csci
                stdprntf_nh16: nop
                mov cs, 0x00
                mov ci, 0x73
                pop a
                psh a
                sub ci
                jmr nz, :stdprntf_nxtf
                .mv dsdi, :sys_stdprntf
                cal :peek16
                mov ds, cs
                mov di, ci
                cal :peek16
                psh ci
                psh cs
                cal :inc16
                mov cs, ds
                mov ci, di
                .mv dsdi, :sys_stdprntf
                cal :poke16
                pop ds
                pop di
                cal :printstr
                stdprntf_nxtf: pop a
                xor a
                jmr z, :stdprntf_next
                stdprntf_end: pop a
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st16
                xor a
                jmr z, :stdprntf_cont
                stdprntf_next: nop
                mov a, 0x02
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x02
            cal :stackvar8st16
                stdprntf_cont: nop
                .mv csci, :LABEL0039
                xor a
                jmp z, csci
LABEL003a:      nop
                mov cs, 0x00
                mov ci, 0x00
                ret
                ret
;END OF FUNCTION printf
;FUNCTION bdio_tracksector_add
FBDIO_TRACK003b:nop
                mov a, 0x00
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x04
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL003c
                mov a, 0x08
                sub di
                mov ds, a
                mov a, ci
                shr ds
                mov ds, a
                mov a, cs
                shl di
                or  ds
                mov cs, a
                mov a, ci
                shl di
                mov ci, a
                xor a
                jmr z, :LABEL003d
LABEL003c:            mov ds, a
                mov a, ci
                shl ds
                mov cs, a
                mov ci, 0x00 
LABEL003d:            nop
                        psh cs
                        psh ci
                mov a, 0x01
                cal :stackvar8gt8
                        pop di
                        pop ds
                mov a, cs
                or ds
                mov cs, a
                mov a, ci
                or di
                mov ci, a
            mov a, 0x05
            cal :stackvar8st16
                mov a, 0x05
                cal :stackvar8gt16
                        psh cs
                        psh ci
                mov a, 0x02
                cal :stackvar8gt8
                        pop di
                        pop ds
                cal :add16
            mov a, 0x05
            cal :stackvar8st16
                mov a, 0x05
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x04
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL003e 
                mov a, 0x08
                sub di
                mov ds, a
                mov a, cs
                shl ds
                mov ds, a
                mov a, cs
                shr di
                mov cs, a
                mov a, ci
                shr di
                or  ds
                mov ci, a
                xor a
                jmr z, :LABEL003f
LABEL003e:            mov ds, a
                mov a, cs
                shr ds
                mov ci, a
                mov cs, 0x00 
LABEL003f:            nop
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x08
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL0040
                mov a, 0x08
                sub di
                mov ds, a
                mov a, ci
                shr ds
                mov ds, a
                mov a, cs
                shl di
                or  ds
                mov cs, a
                mov a, ci
                shl di
                mov ci, a
                xor a
                jmr z, :LABEL0041
LABEL0040:            mov ds, a
                mov a, ci
                shl ds
                mov cs, a
                mov ci, 0x00 
LABEL0041:            nop
            mov a, 0x03
            cal :stackvar8st16
                mov a, 0x03
                cal :stackvar8gt16
                        psh cs
                        psh ci
                mov a, 0x05
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x0f
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
                        pop di
                        pop ds
                mov a, cs
                or ds
                mov cs, a
                mov a, ci
                or di
                mov ci, a
            mov a, 0x03
            cal :stackvar8st16
                mov a, 0x03
                cal :stackvar8gt16
                ret
                ret
;END OF FUNCTION bdio_tracksector_add
;FUNCTION bdio_printexecres
FBDIO_PRINT0042:nop
                .mv csci, :DATA0043
            mov a, 0x01
            cal :stackvar8st16
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0xe5
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0044
                jmp z, csci
                .mv csci, :DATA0045
            mov a, 0x01
            cal :stackvar8st16
LABEL0044:      nop
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0xe3
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0046
                jmp z, csci
                .mv csci, :DATA0047
            mov a, 0x01
            cal :stackvar8st16
LABEL0046:      nop
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0xe0
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0048
                jmp z, csci
                .mv csci, :DATA0049
            mov a, 0x01
            cal :stackvar8st16
LABEL0048:      nop
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0xe7
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL004a
                jmp z, csci
                .mv csci, :DATA004b
            mov a, 0x01
            cal :stackvar8st16
LABEL004a:      nop
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0xe8
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL004c
                jmp z, csci
                .mv csci, :DATA004d
            mov a, 0x01
            cal :stackvar8st16
LABEL004c:      nop
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0xe9
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL004e
                jmp z, csci
                .mv csci, :DATA004f
            mov a, 0x01
            cal :stackvar8st16
LABEL004e:      nop
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0xea
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0050
                jmp z, csci
                .mv csci, :DATA0051
            mov a, 0x01
            cal :stackvar8st16
LABEL0050:      nop
    ;depth 2: STACKHEAD += 3
                    mov a, 0x03
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0x03
            mov a, 0x00
            cal :stackvar8st16
                .mv csci, :DATA0052
            mov a, 0x02
            cal :stackvar8st16
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x04
            cal :stackvar8st16
                mov a, 0x82
                cal :stackvar8gt16
            mov a, 0x06
            cal :stackvar8st16
                cal :FPRINTF0038
    ;depth 1: STACKHEAD -= 3
                    mov a, 0x83
                    cal :stackheadrll8
                ret
;END OF FUNCTION bdio_printexecres
;FUNCTION bdio_getstate
FBDIO_GETST0053:nop
                mov cs, 0x00
                mov ci, 0x08
                in a, #ci
                mov ci, a
                ret
;END OF FUNCTION bdio_getstate
;FUNCTION bdio_checkstate
FBDIO_CHECK0054:nop
    ;depth 2: STACKHEAD += 1
                    mov a, 0x01
                    cal :stackheadrll8
                cal :FBDIO_GETST0053
    ;depth 1: STACKHEAD -= 1
                    mov a, 0x81
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 1
                    mov a, 0x01
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x00
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x81
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 1
                    mov a, 0x81
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x10
                    cal :eq16
                    mov cs, 0x00
                    dec a
                    mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0055
                jmp z, csci
                mov a, 0x00
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
LABEL0055:      nop
                mov a, 0x01
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_checkstate
;FUNCTION bdio_configure
FBDIO_CONFI0056:nop
                mov cs, 0x00
                mov ci, 0x08
                psh ci
                mov cs, 0x00
                mov ci, 0xf1
                psh ci
                mov a, 0x00
                cal :stackvar8gt16
                pop a
                pop di
                out #di, a
                mov a, cs
                out #di, a
                mov a, ci
                out #di, a
    ;depth 2: STACKHEAD += 2
                    mov a, 0x02
                    cal :stackheadrll8
                cal :FBDIO_CHECK0054
    ;depth 1: STACKHEAD -= 2
                    mov a, 0x82
                    cal :stackheadrll8
                ret
                ret
;END OF FUNCTION bdio_configure
;FUNCTION bdio_get_procstackhead
FBDIO_GET_P0057:nop
                mov cs, ss
                mov ci, si
                ret
;END OF FUNCTION bdio_get_procstackhead
;FUNCTION bdio_get_sysstackhead
FBDIO_GET_S0058:nop
                .mv dsdi, :sys_stackhead
                cal :peek16
                ret
;END OF FUNCTION bdio_get_sysstackhead
;FUNCTION bdio_iosec
FBDIO_IOSEC0059:nop
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov a, 0x83
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FBDIO_CONFI0056
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x05
            cal :stackvar8st8
                mov a, 0x05
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL005a
                jmp z, csci
                mov a, 0x02
                cal :stackvar8gt8
                psh ci
                mov a, 0x01
                cal :stackvar8gt8
                psh ci
                mov cs, 0x00
                mov ci, 0x08
                psh ci
                mov a, 0x00
                cal :stackvar8gt8
                psh ci
                pop a
                pop di
                out #di, a
                pop a
                out #di, a
                pop a
                out #di, a
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                cal :FBDIO_CHECK0054
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x05
            cal :stackvar8st8
LABEL005a:      nop
                mov a, 0x05
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_iosec
;FUNCTION bdio_getdrive
FBDIO_GETDR005b:nop
    ;depth 2: STACKHEAD += 1
                    mov a, 0x01
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x01
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 1
                    mov a, 0x81
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_getdrive
;FUNCTION bdio_fcat_var
FBDIO_FCAT_005c:nop
    ;depth 2: STACKHEAD += 2
                    mov a, 0x02
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x02
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 2
                    mov a, 0x82
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 2
                    mov a, 0x02
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x03
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x81
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 2
                    mov a, 0x82
                    cal :stackheadrll8
                ret
;END OF FUNCTION bdio_fcat_var
;FUNCTION bdio_fcat_scanfirst
FBDIO_FCAT_005d:nop
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x03
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0xf2
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x85
                cal :stackvar8gt16
            mov a, 0x03
            cal :stackvar8st16
                cal :FBDIO_IOSEC0059
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st8
                mov a, 0x04
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL005e
                jmp z, csci
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                cal :FBDIO_FCAT_005c
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
LABEL005e:      nop
                mov a, 0x04
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_fcat_scanfirst
;FUNCTION bdio_fcat_scannext
FBDIO_FCAT_005f:nop
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x02
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
            mov a, 0x02
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x03
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x04
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_TRACK003b
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
            mov a, 0x05
            cal :stackvar8st16
                mov a, 0x05
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x08
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL0060 
                mov a, 0x08
                sub di
                mov ds, a
                mov a, cs
                shl ds
                mov ds, a
                mov a, cs
                shr di
                mov cs, a
                mov a, ci
                shr di
                or  ds
                mov ci, a
                xor a
                jmr z, :LABEL0061
LABEL0060:            mov ds, a
                mov a, cs
                shr ds
                mov ci, a
                mov cs, 0x00 
LABEL0061:            nop
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x05
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0xff
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x02
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x01
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                    cal :gt16
                    mov cs, 0x00
                    mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0062
                jmp z, csci
                mov cs, 0x00
                mov ci, 0xc0
            mov a, 0x04
            cal :stackvar8st8
LABEL0062:      nop
                mov a, 0x04
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0063
                jmp z, csci
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0xf2
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x87
                cal :stackvar8gt16
            mov a, 0x03
            cal :stackvar8st16
                cal :FBDIO_IOSEC0059
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st8
                mov a, 0x04
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0064
                jmp z, csci
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                cal :FBDIO_FCAT_005c
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
LABEL0064:      nop
LABEL0063:      nop
                mov a, 0x04
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_fcat_scannext
;FUNCTION bdio_fcat_scanmem
FBDIO_FCAT_0065:nop
    ;depth 2: STACKHEAD += 18
                    mov a, 0x12
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x04
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 18
                    mov a, 0x92
                    cal :stackheadrll8
            mov a, 0x02
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 18
                    mov a, 0x12
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x05
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 18
                    mov a, 0x92
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 18
                    mov a, 0x12
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x06
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 18
                    mov a, 0x92
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st8
                mov a, 0x03
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x04
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL0066
                mov a, 0x08
                sub di
                mov ds, a
                mov a, ci
                shr ds
                mov ds, a
                mov a, cs
                shl di
                or  ds
                mov cs, a
                mov a, ci
                shl di
                mov ci, a
                xor a
                jmr z, :LABEL0067
LABEL0066:            mov ds, a
                mov a, ci
                shl ds
                mov cs, a
                mov ci, 0x00 
LABEL0067:            nop
                        psh cs
                        psh ci
                mov a, 0x04
                cal :stackvar8gt8
                        pop di
                        pop ds
                mov a, cs
                or ds
                mov cs, a
                mov a, ci
                or di
                mov ci, a
            mov a, 0x09
            cal :stackvar8st16
                mov a, 0x00
                cal :stackvar8gt16
            mov a, 0x05
            cal :stackvar8st16
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x80
                cal :add16
            mov a, 0x07
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x11
            cal :stackvar8st8
LABEL0068:      nop
                mov a, 0x05
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov a, 0x07
                cal :stackvar8gt16
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x11
                cal :stackvar8gt8
                mov a, cs
                or  ci
                mov a, f
                and 0x01
                mov cs,0x00
                mov ci, a
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0069
                jmp z, csci
    ;depth 2: STACKHEAD += 18
                    mov a, 0x12
                    cal :stackheadrll8
                mov a, 0x8d
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x03
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 18
                    mov a, 0x92
                    cal :stackheadrll8
            mov a, 0x0e
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 18
                    mov a, 0x12
                    cal :stackheadrll8
                mov a, 0x8d
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 18
                    mov a, 0x92
                    cal :stackheadrll8
            mov a, 0x0b
            cal :stackvar8st8
                mov a, 0x0e
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x00
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, cs
                or ci
                .mv csci, :LABEL006a
                jmp z, csci
    ;depth 2: STACKHEAD += 18
                    mov a, 0x12
                    cal :stackheadrll8
                mov a, 0x8d
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 18
                    mov a, 0x92
                    cal :stackheadrll8
            mov a, 0x0c
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 18
                    mov a, 0x12
                    cal :stackheadrll8
                mov a, 0x8d
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x02
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 18
                    mov a, 0x92
                    cal :stackheadrll8
            mov a, 0x0d
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 18
                    mov a, 0x12
                    cal :stackheadrll8
                mov a, 0x86
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x84
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_TRACK003b
    ;depth 1: STACKHEAD -= 18
                    mov a, 0x92
                    cal :stackheadrll8
            mov a, 0x0f
            cal :stackvar8st16
                mov a, 0x09
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov a, 0x0f
                cal :stackvar8gt16
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL006b
                jmp z, csci
                mov a, 0x0f
                cal :stackvar8gt16
            mov a, 0x09
            cal :stackvar8st16
                mov a, 0x09
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x08
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL006c 
                mov a, 0x08
                sub di
                mov ds, a
                mov a, cs
                shl ds
                mov ds, a
                mov a, cs
                shr di
                mov cs, a
                mov a, ci
                shr di
                or  ds
                mov ci, a
                xor a
                jmr z, :LABEL006d
LABEL006c:            mov ds, a
                mov a, cs
                shr ds
                mov ci, a
                mov cs, 0x00 
LABEL006d:            nop
            mov a, 0x0c
            cal :stackvar8st8
                mov a, 0x09
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x0f
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
            mov a, 0x0d
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 18
                    mov a, 0x12
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x05
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x86
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 18
                    mov a, 0x92
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 18
                    mov a, 0x12
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x06
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 18
                    mov a, 0x92
                    cal :stackheadrll8
LABEL006b:      nop
                xor a
                .mv csci, :LABEL006e
                jmp z, csci
LABEL006a:      nop
                mov a, 0x0b
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov a, 0x02
                cal :stackvar8gt8
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL006f
                jmp z, csci
                mov a, 0x0b
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 18
                    mov a, 0x12
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x04
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x90
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 18
                    mov a, 0x92
                    cal :stackheadrll8
LABEL006f:      nop
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x11
            cal :stackvar8st8
LABEL006e:      nop
                mov a, 0x05
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x10
                cal :add16
            mov a, 0x05
            cal :stackvar8st16
                .mv csci, :LABEL0068
                xor a
                jmp z, csci
LABEL0069:      nop
                mov a, 0x11
                cal :stackvar8gt8
                mov a, cs
                or  ci
                mov a, f
                and 0x01
                mov cs,0x00
                mov ci, a
                ret
                ret
;END OF FUNCTION bdio_fcat_scanmem
;FUNCTION bdio_fcat_ffindmem
FBDIO_FCAT_0070:nop
                mov a, 0x02
                cal :stackvar8gt16
            mov a, 0x04
            cal :stackvar8st16
                mov a, 0x02
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x80
                cal :add16
            mov a, 0x06
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x0c
            cal :stackvar8st8
LABEL0071:      nop
                mov a, 0x04
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov a, 0x06
                cal :stackvar8gt16
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x0c
                cal :stackvar8gt8
                mov a, cs
                or  ci
                mov a, f
                and 0x01
                mov cs,0x00
                mov ci, a
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0072
                jmp z, csci
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x03
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
            mov a, 0x08
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0xff
            mov a, 0x0c
            cal :stackvar8st8
                mov a, 0x08
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x00
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, cs
                or ci
                .mv csci, :LABEL0073
                jmp z, csci
                mov a, 0x04
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x05
                cal :add16
            mov a, 0x09
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov a, 0x8d
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x84
                cal :stackvar8gt16
            mov a, 0x02
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x0b
            mov a, 0x04
            cal :stackvar8st16
                cal :FSTRNCMP0013
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
            mov a, 0x0b
            cal :stackvar8st8
                mov a, 0x0b
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
            mov a, 0x0c
            cal :stackvar8st8
LABEL0073:      nop
                mov a, 0x04
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x10
                cal :add16
            mov a, 0x04
            cal :stackvar8st16
                .mv csci, :LABEL0071
                xor a
                jmp z, csci
LABEL0072:      nop
                mov a, 0x0c
                cal :stackvar8gt8
                mov a, cs
                or ci
                .mv csci, :LABEL0074
                jmp z, csci
                mov a, 0x0c
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x01
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0075
                jmp z, csci
                mov a, 0x04
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x10
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :sub16
            mov a, 0x04
            cal :stackvar8st16
                xor a
                .mv csci, :LABEL0076
                jmp z, csci
LABEL0075:      nop
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x04
            cal :stackvar8st16
LABEL0076:      nop
                xor a
                .mv csci, :LABEL0077
                jmp z, csci
LABEL0074:      nop
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x04
            cal :stackvar8st16
LABEL0077:      nop
                mov a, 0x04
                cal :stackvar8gt16
                ret
                ret
;END OF FUNCTION bdio_fcat_ffindmem
;FUNCTION bdio_fcat_read
FBDIO_FCAT_0078:nop
    ;depth 2: STACKHEAD += 1
                    mov a, 0x01
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x04
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0xff
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 1
                    mov a, 0x81
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 1
                    mov a, 0x01
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x05
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 1
                    mov a, 0x81
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 1
                    mov a, 0x01
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x06
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 1
                    mov a, 0x81
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 1
                    mov a, 0x01
                    cal :stackheadrll8
                mov cs, 0x0e
                mov ci, 0x80
            mov a, 0x00
            cal :stackvar8st16
                cal :FBDIO_FCAT_005d
    ;depth 1: STACKHEAD -= 1
                    mov a, 0x81
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
LABEL0079:      nop
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL007a
                jmp z, csci
                mov cs, 0x00
                mov ci, 0xc0
            mov a, 0x00
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 1
                    mov a, 0x01
                    cal :stackheadrll8
                mov cs, 0x0e
                mov ci, 0x80
            mov a, 0x00
            cal :stackvar8st16
                cal :FBDIO_FCAT_0065
    ;depth 1: STACKHEAD -= 1
                    mov a, 0x81
                    cal :stackheadrll8
                mov a, cs
                or ci
                .mv csci, :LABEL007b
                jmp z, csci
    ;depth 2: STACKHEAD += 1
                    mov a, 0x01
                    cal :stackheadrll8
                mov cs, 0x0e
                mov ci, 0x80
            mov a, 0x00
            cal :stackvar8st16
                cal :FBDIO_FCAT_005f
    ;depth 1: STACKHEAD -= 1
                    mov a, 0x81
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
LABEL007b:      nop
                .mv csci, :LABEL0079
                xor a
                jmp z, csci
LABEL007a:      nop
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0xc0
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL007c
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x00
            cal :stackvar8st8
LABEL007c:      nop
    ;depth 2: STACKHEAD += 1
                    mov a, 0x01
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x04
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 1
                    mov a, 0x81
                    cal :stackheadrll8
                mov ds, 0x00
                mov di, 0xff
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL007d
                jmp z, csci
                mov cs, 0x00
                mov ci, 0xc0
            mov a, 0x00
            cal :stackvar8st8
LABEL007d:      nop
                mov a, 0x00
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_fcat_read
;FUNCTION bdio_ffindfile
FBDIO_FFIND007e:nop
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x03
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                mov cs, 0x4e
                mov ci, 0x80
            mov a, 0x00
            cal :stackvar8st16
                cal :FBDIO_FCAT_005d
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
            mov a, 0x02
            cal :stackvar8st8
LABEL007f:      nop
                mov a, 0x02
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x03
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0080
                jmp z, csci
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                mov a, 0x85
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x4e
                mov ci, 0x80
            mov a, 0x02
            cal :stackvar8st16
                cal :FBDIO_FCAT_0070
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st16
                mov a, 0x03
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0081
                jmp z, csci
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                mov cs, 0x4e
                mov ci, 0x80
            mov a, 0x00
            cal :stackvar8st16
                cal :FBDIO_FCAT_005f
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
            mov a, 0x02
            cal :stackvar8st8
LABEL0081:      nop
                .mv csci, :LABEL007f
                xor a
                jmp z, csci
LABEL0080:      nop
                mov a, 0x03
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0082
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x03
            cal :stackvar8st16
LABEL0082:      nop
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x08
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x82
                cal :stackvar8gt16
            mov a, 0x02
            cal :stackvar8st16
                cal :FPOKE160004
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
                mov a, 0x03
                cal :stackvar8gt16
                ret
                ret
;END OF FUNCTION bdio_ffindfile
;FUNCTION bdio_getfreesect
FBDIO_GETFR0083:nop
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x05
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x06
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x08
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL0084
                mov a, 0x08
                sub di
                mov ds, a
                mov a, ci
                shr ds
                mov ds, a
                mov a, cs
                shl di
                or  ds
                mov cs, a
                mov a, ci
                shl di
                mov ci, a
                xor a
                jmr z, :LABEL0085
LABEL0084:            mov ds, a
                mov a, ci
                shl ds
                mov cs, a
                mov ci, 0x00 
LABEL0085:            nop
                        psh cs
                        psh ci
                mov a, 0x01
                cal :stackvar8gt8
                        pop di
                        pop ds
                mov a, cs
                or ds
                mov cs, a
                mov a, ci
                or di
                mov ci, a
            mov a, 0x02
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov a, 0x86
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_TRACK003b
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st16
                mov a, 0x04
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x08
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL0086 
                mov a, 0x08
                sub di
                mov ds, a
                mov a, cs
                shl ds
                mov ds, a
                mov a, cs
                shr di
                mov cs, a
                mov a, ci
                shr di
                or  ds
                mov ci, a
                xor a
                jmr z, :LABEL0087
LABEL0086:            mov ds, a
                mov a, cs
                shr ds
                mov ci, a
                mov cs, 0x00 
LABEL0087:            nop
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x04
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x0f
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
            mov a, 0x01
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x05
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x86
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x06
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
                mov a, 0x02
                cal :stackvar8gt16
                ret
                ret
;END OF FUNCTION bdio_getfreesect
;FUNCTION bdio_new_fcat
FBDIO_NEW_F0088:nop
                mov cs, 0x00
                mov ci, 0xc0
            mov a, 0x03
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x04
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st8
                mov a, 0x04
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0xff
                    cal :eq16
                    mov cs, 0x00
                    dec a
                    mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0089
                jmp z, csci
                mov a, 0x04
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x03
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL008a 
                mov a, 0x08
                sub di
                mov ds, a
                mov a, cs
                shl ds
                mov ds, a
                mov a, cs
                shr di
                mov cs, a
                mov a, ci
                shr di
                or  ds
                mov ci, a
                xor a
                jmr z, :LABEL008b
LABEL008a:            mov ds, a
                mov a, cs
                shr ds
                mov ci, a
                mov cs, 0x00 
LABEL008b:            nop
            mov a, 0x06
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x00
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x87
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_TRACK003b
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
            mov a, 0x09
            cal :stackvar8st16
                mov a, 0x09
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x08
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL008c 
                mov a, 0x08
                sub di
                mov ds, a
                mov a, cs
                shl ds
                mov ds, a
                mov a, cs
                shr di
                mov cs, a
                mov a, ci
                shr di
                or  ds
                mov ci, a
                xor a
                jmr z, :LABEL008d
LABEL008c:            mov ds, a
                mov a, cs
                shr ds
                mov ci, a
                mov cs, 0x00 
LABEL008d:            nop
            mov a, 0x05
            cal :stackvar8st8
                mov a, 0x09
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0xff
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
            mov a, 0x06
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0xf2
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x88
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x87
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov cs, 0x0e
                mov ci, 0x80
            mov a, 0x03
            cal :stackvar8st16
                cal :FBDIO_IOSEC0059
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x03
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL008e
                jmp z, csci
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                cal :FBDIO_GETFR0083
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
            mov a, 0x09
            cal :stackvar8st16
                mov a, 0x09
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x08
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL008f 
                mov a, 0x08
                sub di
                mov ds, a
                mov a, cs
                shl ds
                mov ds, a
                mov a, cs
                shr di
                mov cs, a
                mov a, ci
                shr di
                or  ds
                mov ci, a
                xor a
                jmr z, :LABEL0090
LABEL008f:            mov ds, a
                mov a, cs
                shr ds
                mov ci, a
                mov cs, 0x00 
LABEL0090:            nop
            mov a, 0x07
            cal :stackvar8st8
                mov a, 0x09
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0xff
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
            mov a, 0x08
            cal :stackvar8st8
                mov a, 0x04
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x07
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x04
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL0091
                mov a, 0x08
                sub di
                mov ds, a
                mov a, ci
                shr ds
                mov ds, a
                mov a, cs
                shl di
                or  ds
                mov cs, a
                mov a, ci
                shl di
                mov ci, a
                xor a
                jmr z, :LABEL0092
LABEL0091:            mov ds, a
                mov a, ci
                shl ds
                mov cs, a
                mov ci, 0x00 
LABEL0092:            nop
            mov a, 0x0b
            cal :stackvar8st16
                mov cs, 0x0e
                mov ci, 0x80
                        psh cs
                        psh ci
                mov a, 0x0b
                cal :stackvar8gt16
                        pop di
                        pop ds
                cal :add16
            mov a, 0x0b
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x10
            mov a, 0x02
            cal :stackvar8st16
                cal :FMZERO000b
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x89
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x86
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x02
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x03
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
                mov a, 0x02
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x02
                mov a, cs
                or ds
                mov cs, a
                mov a, ci
                or di
                mov ci, a
            mov a, 0x02
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x04
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x8b
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov a, 0x8d
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x82
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x05
                cal :add16
            mov a, 0x02
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x0b
            mov a, 0x04
            cal :stackvar8st8
                cal :FSTRNCPY0012
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x10
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x82
                cal :stackvar8gt16
            mov a, 0x02
            cal :stackvar8st16
                cal :FPOKE160004
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x04
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x89
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 13
                    mov a, 0x0d
                    cal :stackheadrll8
                mov a, 0x88
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x87
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                cal :FBDIO_FCAT_005c
    ;depth 1: STACKHEAD -= 13
                    mov a, 0x8d
                    cal :stackheadrll8
LABEL008e:      nop
LABEL0089:      nop
                mov a, 0x03
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_new_fcat
;FUNCTION bdio_setdrive
FBDIO_SETDR0093:nop
                mov cs, 0x00
                mov ci, 0xfa
                        psh cs
                        psh ci
                mov a, 0x00
                cal :stackvar8gt8
                        pop di
                        pop ds
                cal :add16
            mov a, 0x02
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x08
                psh ci
                mov a, 0x02
                cal :stackvar8gt8
                pop cs
                mov a, ci
                out #cs, a
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                cal :FBDIO_CHECK0054
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x01
                cal :stackvar8gt8
                mov a, cs
                or  ci
                mov a, f
                and 0x01
                mov cs,0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x03
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0094
                jmp z, csci
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                cal :FBDIO_FCAT_0078
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x01
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
LABEL0094:      nop
                mov a, 0x03
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_setdrive
;FUNCTION bdio_new_fdesc
FBDIO_NEW_F0095:nop
                mov a, 0x02
                cal :stackvar8gt8
                        psh cs
                        psh ci
                mov a, 0x03
                cal :stackvar8gt8
                        pop di
                        pop ds
                mov a, cs
                or ds
                mov cs, a
                mov a, ci
                or di
                mov ci, a
            mov a, 0x02
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x88
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x02
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x03
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x04
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x05
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x86
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x06
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x07
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x81
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
                mov a, 0x02
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_new_fdesc
;FUNCTION bdio_getfree_fdesc_internal
FBDIO_GETFR0096:nop
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov a, 0x85
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x05
            cal :stackvar8st8
LABEL0097:      nop
                mov a, 0x05
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov a, 0x04
                cal :stackvar8gt8
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x06
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0098
                jmp z, csci
                mov a, 0x02
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x08
                cal :add16
            mov a, 0x02
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov a, 0x85
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st8
                mov a, 0x05
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x05
            cal :stackvar8st8
                .mv csci, :LABEL0097
                xor a
                jmp z, csci
LABEL0098:      nop
                mov a, 0x06
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0099
                jmp z, csci
    ;depth 2: STACKHEAD += 16
                    mov a, 0x10
                    cal :stackheadrll8
                mov a, 0x90
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 16
                    mov a, 0x90
                    cal :stackheadrll8
            mov a, 0x0a
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 16
                    mov a, 0x10
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x02
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 16
                    mov a, 0x90
                    cal :stackheadrll8
            mov a, 0x0b
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 16
                    mov a, 0x10
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x03
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 16
                    mov a, 0x90
                    cal :stackheadrll8
            mov a, 0x0c
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 16
                    mov a, 0x10
                    cal :stackheadrll8
                mov a, 0x90
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 16
                    mov a, 0x90
                    cal :stackheadrll8
            mov a, 0x07
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 16
                    mov a, 0x10
                    cal :stackheadrll8
                mov a, 0x90
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x02
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 16
                    mov a, 0x90
                    cal :stackheadrll8
            mov a, 0x08
            cal :stackvar8st8
                mov a, 0x02
                cal :stackvar8gt16
                mov ds, 0x4f
                mov di, 0x12
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL009a
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x10
            mov a, 0x0d
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x09
            cal :stackvar8st8
                xor a
                .mv csci, :LABEL009b
                jmp z, csci
LABEL009a:      nop
                mov cs, 0x00
                mov ci, 0x20
            mov a, 0x0d
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 16
                    mov a, 0x10
                    cal :stackheadrll8
                mov a, 0x90
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x03
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 16
                    mov a, 0x90
                    cal :stackheadrll8
            mov a, 0x09
            cal :stackvar8st8
LABEL009b:      nop
    ;depth 2: STACKHEAD += 16
                    mov a, 0x10
                    cal :stackheadrll8
                mov a, 0x8e
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x8b
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x86
                cal :stackvar8gt8
            mov a, 0x04
            cal :stackvar8st8
                mov a, 0x89
                cal :stackvar8gt8
            mov a, 0x05
            cal :stackvar8st8
                mov a, 0x88
                cal :stackvar8gt8
            mov a, 0x06
            cal :stackvar8st8
                mov a, 0x87
                cal :stackvar8gt8
            mov a, 0x07
            cal :stackvar8st8
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x08
            cal :stackvar8st8
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x09
            cal :stackvar8st8
                cal :FBDIO_NEW_F0095
    ;depth 1: STACKHEAD -= 16
                    mov a, 0x90
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st8
                mov a, 0x06
                cal :stackvar8gt8
            mov a, 0x05
            cal :stackvar8st8
                xor a
                .mv csci, :LABEL009c
                jmp z, csci
LABEL0099:      nop
                mov cs, 0x00
                mov ci, 0xff
            mov a, 0x05
            cal :stackvar8st8
LABEL009c:      nop
                mov a, 0x05
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_getfree_fdesc_internal
;FUNCTION bdio_fcat_checkattribs
FBDIO_FCAT_009d:nop
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov a, 0x84
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x04
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x03
                cal :stackvar8gt8
                        psh cs
                        psh ci
                mov a, 0x02
                cal :stackvar8gt8
                        pop di
                        pop ds
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
                ret
                ret
;END OF FUNCTION bdio_fcat_checkattribs
;FUNCTION bdio_fbinopen_internal
FBDIO_FBINO009e:nop
                mov cs, 0x00
                mov ci, 0xe5
            mov a, 0x03
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                cal :FBDIO_CHECK0054
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st8
                mov a, 0x04
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL009f
                jmp z, csci
                mov cs, 0x00
                mov ci, 0xe0
            mov a, 0x03
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov a, 0x87
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FBDIO_FFIND007e
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
            mov a, 0x05
            cal :stackvar8st16
                mov a, 0x05
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                mov a, cs
                or ci
                .mv csci, :LABEL00a0
                jmp z, csci
                mov a, 0x02
                cal :stackvar8gt8
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x02
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0xe3
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00a1
                jmp z, csci
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_FCAT_009d
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
                mov a, cs
                or ci
                .mv csci, :LABEL00a2
                jmp z, csci
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x4f
                mov ci, 0x1a
            mov a, 0x02
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x03
            mov a, 0x04
            cal :stackvar8st8
                cal :FBDIO_GETFR0096
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
LABEL00a2:      nop
                xor a
                .mv csci, :LABEL00a3
                jmp z, csci
LABEL00a1:      nop
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x02
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_FCAT_009d
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
                mov a, cs
                or ci
                .mv csci, :LABEL00a4
                jmp z, csci
    ;depth 2: STACKHEAD += 7
                    mov a, 0x07
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x4f
                mov ci, 0x12
            mov a, 0x02
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x04
            cal :stackvar8st8
                cal :FBDIO_GETFR0096
    ;depth 1: STACKHEAD -= 7
                    mov a, 0x87
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
LABEL00a4:      nop
LABEL00a3:      nop
LABEL00a0:      nop
LABEL009f:      nop
                mov a, 0x03
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_fbinopen_internal
;FUNCTION bdio_getfdesc_addr
FBDIO_GETFD00a5:nop
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x01
            cal :stackvar8st16
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x10
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00a6
                jmp z, csci
                mov cs, 0x4f
                mov ci, 0x12
            mov a, 0x01
            cal :stackvar8st16
LABEL00a6:      nop
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x20
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00a7
                jmp z, csci
                mov cs, 0x4f
                mov ci, 0x1a
                        psh cs
                        psh ci
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x0f
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
                mov ds, 0x00
                mov di, 0x08
                cal :mul16
                        pop di
                        pop ds
                cal :add16
            mov a, 0x01
            cal :stackvar8st16
LABEL00a7:      nop
                mov a, 0x01
                cal :stackvar8gt16
                ret
                ret
;END OF FUNCTION bdio_getfdesc_addr
;FUNCTION bdio_fbin_internal
FBDIO_FBIN_00a8:nop
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x05
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                        psh cs
                        psh ci
                mov a, 0x04
                cal :stackvar8gt8
                        pop di
                        pop ds
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00a9
                jmp z, csci
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x8f
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                cal :FBDIO_GETFD00a5
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x08
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x04
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
            mov a, 0x09
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x05
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
            mov a, 0x0a
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x02
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
            mov a, 0x0b
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x03
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
            mov a, 0x0c
            cal :stackvar8st8
LABEL00aa:      nop
                mov a, 0x08
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov a, 0x03
                cal :stackvar8gt8
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x04
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x10
                cal :eq16
                mov cs, 0x00
                mov ci, a
                        psh cs
                        psh ci
                mov a, 0x09
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov a, 0x0a
                cal :stackvar8gt8
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                        pop di
                        pop ds
                mov a, cs
                or ds
                mov cs, a
                mov a, ci
                or di
                mov ci, a
                        pop di
                        pop ds
                mov a, cs
                or ci
                mov ci, f
                mov a, ds
                or di
                mov a, f
                or ci
                not a
                and 0x01
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00ab
                jmp z, csci
                mov a, 0x04
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x20
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00ac
                jmp z, csci
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0xf2
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x8e
                cal :stackvar8gt16
            mov a, 0x03
            cal :stackvar8st16
                cal :FBDIO_IOSEC0059
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_TRACK003b
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
            mov a, 0x0d
            cal :stackvar8st16
                xor a
                .mv csci, :LABEL00ad
                jmp z, csci
LABEL00ac:      nop
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0xf3
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x8e
                cal :stackvar8gt16
            mov a, 0x03
            cal :stackvar8st16
                cal :FBDIO_IOSEC0059
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                cal :FBDIO_GETFR0083
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
            mov a, 0x0d
            cal :stackvar8st16
LABEL00ad:      nop
                mov a, 0x01
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x80
                cal :add16
            mov a, 0x01
            cal :stackvar8st16
                mov a, 0x08
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x08
            cal :stackvar8st8
                mov a, 0x09
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x09
            cal :stackvar8st8
                mov a, 0x0d
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x08
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL00ae 
                mov a, 0x08
                sub di
                mov ds, a
                mov a, cs
                shl ds
                mov ds, a
                mov a, cs
                shr di
                mov cs, a
                mov a, ci
                shr di
                or  ds
                mov ci, a
                xor a
                jmr z, :LABEL00af
LABEL00ae:            mov ds, a
                mov a, cs
                shr ds
                mov ci, a
                mov cs, 0x00 
LABEL00af:            nop
            mov a, 0x0b
            cal :stackvar8st8
                mov a, 0x0d
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0xff
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
            mov a, 0x0c
            cal :stackvar8st8
                mov a, 0x09
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x08
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00b0
                jmp z, csci
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                .mv csci, :DATA00b1
            mov a, 0x00
            cal :stackvar8st16
                cal :FPUTS002f
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
LABEL00b0:      nop
                .mv csci, :LABEL00aa
                xor a
                jmp z, csci
LABEL00ab:      nop
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x04
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x86
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x02
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x03
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
                mov a, 0x04
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x20
                    cal :eq16
                    mov cs, 0x00
                    dec a
                    mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00b2
                jmp z, csci
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x05
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x86
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
LABEL00b2:      nop
                mov a, 0x08
                cal :stackvar8gt8
            mov a, 0x05
            cal :stackvar8st8
LABEL00a9:      nop
                mov a, 0x05
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_fbin_internal
;FUNCTION bdio_fclose
FBDIO_FCLOS00b3:nop
                mov cs, 0x00
                mov ci, 0xe2
            mov a, 0x03
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                cal :FBDIO_GETFD00a5
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
            mov a, 0x01
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                mov a, 0x84
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st8
                mov a, 0x04
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                mov a, cs
                or ci
                .mv csci, :LABEL00b4
                jmp z, csci
                mov a, 0x04
                cal :stackvar8gt8
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x10
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00b5
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x05
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x06
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x07
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x07
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x05
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x08
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0xf2
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov cs, 0x0e
                mov ci, 0x80
            mov a, 0x03
            cal :stackvar8st16
                cal :FBDIO_IOSEC0059
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x03
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00b6
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                cal :FBDIO_FCAT_005c
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
                mov a, 0x05
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x07
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x04
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL00b7
                mov a, 0x08
                sub di
                mov ds, a
                mov a, ci
                shr ds
                mov ds, a
                mov a, cs
                shl di
                or  ds
                mov cs, a
                mov a, ci
                shl di
                mov ci, a
                xor a
                jmr z, :LABEL00b8
LABEL00b7:            mov ds, a
                mov a, ci
                shl ds
                mov cs, a
                mov ci, 0x00 
LABEL00b8:            nop
            mov a, 0x09
            cal :stackvar8st16
                mov cs, 0x0e
                mov ci, 0x80
                        psh cs
                        psh ci
                mov a, 0x09
                cal :stackvar8gt16
                        pop di
                        pop ds
                cal :add16
            mov a, 0x09
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x03
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0xf3
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x85
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov cs, 0x0e
                mov ci, 0x80
            mov a, 0x03
            cal :stackvar8st16
                cal :FBDIO_IOSEC0059
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x03
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00b9
                jmp z, csci
                mov a, 0x04
                cal :stackvar8gt8
            mov a, 0x03
            cal :stackvar8st8
                xor a
                .mv csci, :LABEL00ba
                jmp z, csci
LABEL00b9:      nop
                mov cs, 0x00
                mov ci, 0xe7
            mov a, 0x03
            cal :stackvar8st8
LABEL00ba:      nop
                xor a
                .mv csci, :LABEL00bb
                jmp z, csci
LABEL00b6:      nop
                mov cs, 0x00
                mov ci, 0xe6
            mov a, 0x03
            cal :stackvar8st8
LABEL00bb:      nop
LABEL00b5:      nop
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x05
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
LABEL00b4:      nop
                mov a, 0x03
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_fclose
;FUNCTION bdio_freemem
FBDIO_FREEM00bc:nop
    ;depth 2: STACKHEAD += 2
                    mov a, 0x02
                    cal :stackheadrll8
                cal :FBDIO_GET_P0057
    ;depth 1: STACKHEAD -= 2
                    mov a, 0x82
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x00
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x50
                mov ci, 0x00
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :sub16
                ret
                ret
;END OF FUNCTION bdio_freemem
;FUNCTION bdio_execute
FBDIO_EXECU00bd:nop
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov a, 0x84
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0xe3
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_FBINO009e
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x03
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0xe0
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00be
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x0a
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x88
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                cal :FBDIO_GETFD00a5
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st16
                mov a, 0x04
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                mov a, cs
                or ci
                .mv csci, :LABEL00bf
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x87
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st8
                mov cs, 0x4f
                mov ci, 0x08
                mov ds, cs
                mov di, ci
                cal :peek16
            mov a, 0x08
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x83
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x07
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0xe8
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x06
                cal :stackvar8gt8
                        psh cs
                        psh ci
                mov a, 0x07
                cal :stackvar8gt8
                        pop di
                        pop ds
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00c0
                jmp z, csci
                mov cs, 0x00
                mov ci, 0xe7
            mov a, 0x02
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x83
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x04
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_FCAT_009d
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
                mov a, cs
                or ci
                .mv csci, :LABEL00c1
                jmp z, csci
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                cal :FBDIO_FREEM00bc
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x80
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :div16
            mov a, 0x0b
            cal :stackvar8st16
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x8b
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x05
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
            mov a, 0x0d
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0xe9
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x0d
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov a, 0x0b
                cal :stackvar8gt16
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00c2
                jmp z, csci
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x8c
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov cs, 0x50
                mov ci, 0x00
            mov a, 0x01
            cal :stackvar8st16
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x03
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x20
            mov a, 0x04
            cal :stackvar8st8
                cal :FBDIO_FBIN_00a8
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
            mov a, 0x0e
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0xea
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x0e
                cal :stackvar8gt8
                        psh cs
                        psh ci
                mov a, 0x0d
                cal :stackvar8gt8
                        pop di
                        pop ds
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00c3
                jmp z, csci
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x8c
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                cal :FBDIO_FCLOS00b3
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x0a
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                cal :FPUTNL002e
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
                mov cs, 0x50
                mov ci, 0x00
                cal csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st8
LABEL00c3:      nop
LABEL00c2:      nop
LABEL00c1:      nop
LABEL00c0:      nop
LABEL00bf:      nop
                mov a, 0x0a
                cal :stackvar8gt8
                mov a, cs
                or  ci
                mov a, f
                and 0x01
                mov cs,0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00c4
                jmp z, csci
    ;depth 2: STACKHEAD += 15
                    mov a, 0x0f
                    cal :stackheadrll8
                mov a, 0x8c
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                cal :FBDIO_FCLOS00b3
    ;depth 1: STACKHEAD -= 15
                    mov a, 0x8f
                    cal :stackheadrll8
LABEL00c4:      nop
                xor a
                .mv csci, :LABEL00c5
                jmp z, csci
LABEL00be:      nop
                mov a, 0x03
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
LABEL00c5:      nop
                mov a, 0x02
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_execute
;FUNCTION bdio_finternal
FBDIO_FINTE00c6:nop
                mov cs, 0x00
                mov ci, 0xf1
            mov a, 0x06
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                cal :FBDIO_CHECK0054
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
            mov a, 0x07
            cal :stackvar8st8
                mov a, 0x07
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00c7
                jmp z, csci
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x8a
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FBDIO_FFIND007e
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0xf2
            mov a, 0x06
            cal :stackvar8st8
                mov a, 0x04
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                mov a, cs
                or ci
                .mv csci, :LABEL00c8
                jmp z, csci
                mov cs, 0x00
                mov ci, 0xf0
            mov a, 0x06
            cal :stackvar8st8
                mov a, 0x02
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0xd0
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00c9
                jmp z, csci
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x86
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x03
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
                xor a
                .mv csci, :LABEL00ca
                jmp z, csci
LABEL00c9:      nop
                mov a, 0x02
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x5a
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00cb
                jmp z, csci
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov a, 0x86
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x04
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x87
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
LABEL00cb:      nop
LABEL00ca:      nop
    ;depth 2: STACKHEAD += 10
                    mov a, 0x0a
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0xf3
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x81
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov cs, 0x0e
                mov ci, 0x80
            mov a, 0x03
            cal :stackvar8st16
                cal :FBDIO_IOSEC0059
    ;depth 1: STACKHEAD -= 10
                    mov a, 0x8a
                    cal :stackheadrll8
            mov a, 0x07
            cal :stackvar8st8
                mov a, 0x07
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00cc
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x06
            cal :stackvar8st8
LABEL00cc:      nop
LABEL00c8:      nop
LABEL00c7:      nop
                mov a, 0x06
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_finternal
;FUNCTION bdio_fcreate
FBDIO_FCREA00cd:nop
                mov cs, 0x00
                mov ci, 0xed
            mov a, 0x05
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 9
                    mov a, 0x09
                    cal :stackheadrll8
                cal :FBDIO_CHECK0054
    ;depth 1: STACKHEAD -= 9
                    mov a, 0x89
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st8
                mov a, 0x06
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00ce
                jmp z, csci
    ;depth 2: STACKHEAD += 9
                    mov a, 0x09
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FBDIO_FFIND007e
    ;depth 1: STACKHEAD -= 9
                    mov a, 0x89
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0xee
            mov a, 0x05
            cal :stackvar8st8
                mov a, 0x03
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00cf
                jmp z, csci
    ;depth 2: STACKHEAD += 9
                    mov a, 0x09
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x87
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_NEW_F0088
    ;depth 1: STACKHEAD -= 9
                    mov a, 0x89
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0xeb
            mov a, 0x05
            cal :stackvar8st8
                mov a, 0x06
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00d0
                jmp z, csci
    ;depth 2: STACKHEAD += 9
                    mov a, 0x09
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x02
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 9
                    mov a, 0x89
                    cal :stackheadrll8
            mov a, 0x07
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 9
                    mov a, 0x09
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x03
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 9
                    mov a, 0x89
                    cal :stackheadrll8
            mov a, 0x08
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0xec
            mov a, 0x05
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 9
                    mov a, 0x09
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0xf3
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x81
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov cs, 0x0e
                mov ci, 0x80
            mov a, 0x03
            cal :stackvar8st16
                cal :FBDIO_IOSEC0059
    ;depth 1: STACKHEAD -= 9
                    mov a, 0x89
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st8
                mov a, 0x06
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00d1
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x05
            cal :stackvar8st8
LABEL00d1:      nop
LABEL00d0:      nop
LABEL00cf:      nop
LABEL00ce:      nop
                mov a, 0x05
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION bdio_fcreate
;FUNCTION bdio_call
FBDIO_CALL00d2: nop
                bdio_call: psh a
                psh cs
                psh ci
                psh ds
                psh di
                mov a, 0x04
                cal :stackvar8gt16
                cal :dec16
                pop ci
                pop cs
                cal :poke16
                mov a, 0x02
                cal :stackvar8gt16
                cal :dec16
                pop ci
                pop cs
                cal :poke16
                mov a, 0x00
                cal :stackvar8gt16
                cal :dec16
                pop ci
                mov cs, 0x00
                cal :poke16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x06
            cal :stackvar8st16
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x10
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00d3
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0xe3
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_FBINO009e
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00d3:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x11
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00d4
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0xe4
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_FBINO009e
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00d4:      nop
                mov a, 0x04
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x08
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL00d5 
                mov a, 0x08
                sub di
                mov ds, a
                mov a, cs
                shl ds
                mov ds, a
                mov a, cs
                shr di
                mov cs, a
                mov a, ci
                shr di
                or  ds
                mov ci, a
                xor a
                jmr z, :LABEL00d6
LABEL00d5:            mov ds, a
                mov a, cs
                shr ds
                mov ci, a
                mov cs, 0x00 
LABEL00d6:            nop
            mov a, 0x09
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x14
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00d7
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                cal :FBDIO_FCREA00cd
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00d7:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x16
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00d8
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0xd0
            mov a, 0x02
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x03
            cal :stackvar8st8
                cal :FBDIO_FINTE00c6
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00d8:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x17
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00d9
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x89
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x5a
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x03
            cal :stackvar8st8
                cal :FBDIO_FINTE00c6
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00d9:      nop
                mov a, 0x02
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x08
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, di
                sub 0x08
                jmr nn, :LABEL00da 
                mov a, 0x08
                sub di
                mov ds, a
                mov a, cs
                shl ds
                mov ds, a
                mov a, cs
                shr di
                mov cs, a
                mov a, ci
                shr di
                or  ds
                mov ci, a
                xor a
                jmr z, :LABEL00db
LABEL00da:            mov ds, a
                mov a, cs
                shr ds
                mov ci, a
                mov cs, 0x00 
LABEL00db:            nop
            mov a, 0x08
            cal :stackvar8st8
                mov a, 0x02
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0xff
                mov a, cs
                and ds
                mov cs, a
                mov a, ci
                and di
                mov ci, a
            mov a, 0x0a
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x12
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00dc
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x87
                cal :stackvar8gt16
            mov a, 0x01
            cal :stackvar8st16
                mov a, 0x81
                cal :stackvar8gt8
            mov a, 0x03
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x20
            mov a, 0x04
            cal :stackvar8st8
                cal :FBDIO_FBIN_00a8
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00dc:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x13
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00dd
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x87
                cal :stackvar8gt16
            mov a, 0x01
            cal :stackvar8st16
                mov a, 0x81
                cal :stackvar8gt8
            mov a, 0x03
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x10
            mov a, 0x04
            cal :stackvar8st8
                cal :FBDIO_FBIN_00a8
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00dd:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x15
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00de
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x81
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                cal :FBDIO_FCLOS00b3
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00de:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x02
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00df
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                cal :FBDIO_SETDR0093
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00df:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x03
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00e0
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                cal :FBDIO_GETDR005b
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00e0:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00e1
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0xf2
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x81
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x87
                cal :stackvar8gt16
            mov a, 0x03
            cal :stackvar8st16
                cal :FBDIO_IOSEC0059
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00e1:      nop
                mov a, 0x00
                cal :stackvar8gt16
                mov ds, 0x00
                mov di, 0x01
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00e2
                jmp z, csci
    ;depth 2: STACKHEAD += 11
                    mov a, 0x0b
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0xf3
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x81
                cal :stackvar8gt8
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x87
                cal :stackvar8gt16
            mov a, 0x03
            cal :stackvar8st16
                cal :FBDIO_IOSEC0059
    ;depth 1: STACKHEAD -= 11
                    mov a, 0x8b
                    cal :stackheadrll8
            mov a, 0x06
            cal :stackvar8st16
LABEL00e2:      nop
                mov a, 0x06
                cal :stackvar8gt16
                ret
                ret
;END OF FUNCTION bdio_call
;FUNCTION printdrive
FPRINTDRIVE00e3:nop
                .mv csci, :DATA00e4
            mov a, 0x01
            cal :stackvar8st16
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00e5
                jmp z, csci
                .mv csci, :DATA00e6
            mov a, 0x01
            cal :stackvar8st16
                xor a
                .mv csci, :LABEL00e7
                jmp z, csci
LABEL00e5:      nop
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x01
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00e8
                jmp z, csci
                .mv csci, :DATA00e9
            mov a, 0x01
            cal :stackvar8st16
LABEL00e8:      nop
LABEL00e7:      nop
    ;depth 2: STACKHEAD += 3
                    mov a, 0x03
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0x02
            mov a, 0x00
            cal :stackvar8st16
                .mv csci, :DATA00ea
            mov a, 0x02
            cal :stackvar8st16
                mov a, 0x82
                cal :stackvar8gt16
            mov a, 0x04
            cal :stackvar8st16
                cal :FPRINTF0038
    ;depth 1: STACKHEAD -= 3
                    mov a, 0x83
                    cal :stackheadrll8
                ret
;END OF FUNCTION printdrive
;FUNCTION printhelp
FPRINTHELP00eb: nop
                mov cs, 0x00
                mov ci, 0x06
            mov a, 0x00
            cal :stackvar8st16
                .mv csci, :DATA00ec
            mov a, 0x02
            cal :stackvar8st16
                .mv csci, :DATA00ed
            mov a, 0x04
            cal :stackvar8st16
                .mv csci, :DATA00ee
            mov a, 0x06
            cal :stackvar8st16
                .mv csci, :DATA00ef
            mov a, 0x08
            cal :stackvar8st16
                .mv csci, :DATA00f0
            mov a, 0x0a
            cal :stackvar8st16
                .mv csci, :DATA00f1
            mov a, 0x0c
            cal :stackvar8st16
                cal :FPRINTF0038
                ret
;END OF FUNCTION printhelp
;FUNCTION eject
FEJECT00f2:     nop
                mov a, 0x2d
                psh a
                pop f
                cal :os_metacall
                ret
;END OF FUNCTION eject
;FUNCTION changedrive
FCHANGEDRIV00f3:nop
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                cal :FBDIO_GETDR005b
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
            mov a, 0x01
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x41
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00f4
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st8
                xor a
                .mv csci, :LABEL00f5
                jmp z, csci
LABEL00f4:      nop
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x02
            cal :stackvar8st8
LABEL00f5:      nop
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x03
            cal :stackvar8st8
                mov a, 0x01
                cal :stackvar8gt8
                        psh cs
                        psh ci
                mov a, 0x02
                cal :stackvar8gt8
                        pop di
                        pop ds
                    cal :eq16
                    mov cs, 0x00
                    dec a
                    mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00f6
                jmp z, csci
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov a, 0x82
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x01
            cal :stackvar8st8
                cal :FBDIO_SETDR0093
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
LABEL00f6:      nop
                mov a, 0x03
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION changedrive
;FUNCTION execute
FEXECUTE00f7:   nop
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov a, 0x86
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FSTRNLEN80010
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x03
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st8
                mov a, 0x03
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x00
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                mov a, cs
                or ci
                .mv csci, :LABEL00f8
                jmp z, csci
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov a, 0x86
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FUPSTRING0026
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov a, 0x86
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                cal :FSTRNEXTWOR000f
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st16
                mov a, 0x04
                cal :stackvar8gt16
                    psh cs
                    psh ci
                mov a, 0x00
                cal :stackvar8gt16
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :sub16
            mov a, 0x03
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov a, 0x86
                cal :stackvar8gt16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x4f
                mov ci, 0x40
            mov a, 0x02
            cal :stackvar8st16
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x04
            cal :stackvar8st8
                cal :FSTRNCPY0012
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
LABEL00f9:      nop
                mov a, 0x03
                cal :stackvar8gt8
                    psh cs
                    psh ci
                mov cs, 0x00
                mov ci, 0x08
                    mov ds, cs
                    mov di, ci
                    pop ci
                    pop cs
                cal :gteq16
                dec a
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL00fa
                jmp z, csci
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x40
                        psh cs
                        psh ci
                mov a, 0x83
                cal :stackvar8gt8
                        pop di
                        pop ds
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x20
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
                mov a, 0x03
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x03
            cal :stackvar8st8
                .mv csci, :LABEL00f9
                xor a
                jmp z, csci
LABEL00fa:      nop
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                .mv csci, :DATA00fb
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x4f
                mov ci, 0x40
                        psh cs
                        psh ci
                mov a, 0x83
                cal :stackvar8gt8
                        pop di
                        pop ds
                cal :add16
            mov a, 0x02
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x03
            mov a, 0x04
            cal :stackvar8st8
                cal :FSTRNCPY0012
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x40
                mov ds, 0x00
                mov di, 0x0b
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x40
            mov a, 0x00
            cal :stackvar8st16
                cal :FBDIO_EXECU00bd
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x02
            cal :stackvar8st8
LABEL00f8:      nop
                mov a, 0x02
                cal :stackvar8gt8
                ret
                ret
;END OF FUNCTION execute
;FUNCTION main
FMAIN00fc:      nop
                .mv csci, :bdio_call
                .def bdiocalladdr, 0x007e
                .mv dsdi, :bdiocalladdr
                cal :poke16
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0x02
            mov a, 0x00
            cal :stackvar8st16
                .mv csci, :DATA00fd
            mov a, 0x02
            cal :stackvar8st16
    ;depth 3: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                cal :FBDIO_FREEM00bc
    ;depth 2: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st16
                cal :FPRINTF0038
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0x01
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0xff
            mov a, 0x02
            cal :stackvar8st8
                cal :FPOKE80003
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x00
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x01
            cal :stackvar8st8
                cal :FBDIO_SETDR0093
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                mov a, cs
                or ci
                .mv csci, :LABEL00fe
                jmp z, csci
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0x02
            mov a, 0x00
            cal :stackvar8st16
                .mv csci, :DATA00ff
            mov a, 0x02
            cal :stackvar8st16
                mov a, 0x84
                cal :stackvar8gt8
            mov a, 0x04
            cal :stackvar8st16
                cal :FPRINTF0038
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
LABEL00fe:      nop
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x01
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x03
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 4
                    mov a, 0x04
                    cal :stackheadrll8
                cal :FPUTNL002e
    ;depth 1: STACKHEAD -= 4
                    mov a, 0x84
                    cal :stackheadrll8
LABEL0100:      nop
                mov a, 0x01
                cal :stackvar8gt8
                mov a, cs
                or ci
                .mv csci, :LABEL0101
                jmp z, csci
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                cal :FBDIO_GETDR005b
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
            mov a, 0x02
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                mov a, 0x83
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                cal :FPRINTDRIVE00e3
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
    ;depth 2: STACKHEAD += 5
                    mov a, 0x05
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0xc0
            mov a, 0x00
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x40
            mov a, 0x02
            cal :stackvar8st8
                cal :FREADSN0031
    ;depth 1: STACKHEAD -= 5
                    mov a, 0x85
                    cal :stackheadrll8
            mov a, 0x04
            cal :stackvar8st8
                mov a, 0x04
                cal :stackvar8gt8
                mov a, cs
                or ci
                .mv csci, :LABEL0102
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x05
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0xc0
            mov a, 0x00
            cal :stackvar8st16
                .mv csci, :DATA0103
            mov a, 0x02
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x04
            mov a, 0x04
            cal :stackvar8st16
                cal :FSTRNCMP0013
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0104
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x01
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x05
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x03
            cal :stackvar8st8
LABEL0104:      nop
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0xc0
            mov a, 0x00
            cal :stackvar8st16
                .mv csci, :DATA0105
            mov a, 0x02
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x04
            mov a, 0x04
            cal :stackvar8st16
                cal :FSTRNCMP0013
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0106
                jmp z, csci
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                cal :FPRINTHELP00eb
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x05
            cal :stackvar8st8
LABEL0106:      nop
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0xc0
            mov a, 0x00
            cal :stackvar8st16
                .mv csci, :DATA0107
            mov a, 0x02
            cal :stackvar8st16
                mov cs, 0x00
                mov ci, 0x05
            mov a, 0x04
            cal :stackvar8st16
                cal :FSTRNCMP0013
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                cal :eq16
                mov cs, 0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL0108
                jmp z, csci
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x01
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x00
            mov a, 0x03
            cal :stackvar8st8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x05
            cal :stackvar8st8
LABEL0108:      nop
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0xc0
                mov ds, 0x00
                mov di, 0x01
                cal :add16
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
                mov ds, 0x00
                mov di, 0x3a
                cal :eq16
                mov cs, 0x00
                mov ci, a
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                mov a, cs
                or ci
                .mv csci, :LABEL0109
                jmp z, csci
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
    ;depth 3: STACKHEAD += 1
                    mov a, 0x01
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0xc0
            mov a, 0x00
            cal :stackvar8st16
                cal :FPEEK80001
    ;depth 2: STACKHEAD -= 1
                    mov a, 0x81
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
                cal :FUPCHAR0025
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov a, 0x86
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                cal :FCHANGEDRIV00f3
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
                mov cs, 0x00
                mov ci, 0x01
            mov a, 0x05
            cal :stackvar8st8
LABEL0109:      nop
                mov a, 0x05
                cal :stackvar8gt8
                mov a, cs
                or  ci
                mov a, f
                and 0x01
                mov cs,0x00
                mov ci, a
                mov a, cs
                or ci
                .mv csci, :LABEL010a
                jmp z, csci
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov cs, 0x4f
                mov ci, 0xc0
            mov a, 0x00
            cal :stackvar8st16
                cal :FEXECUTE00f7
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
            mov a, 0x00
            cal :stackvar8st8
                mov a, 0x00
                cal :stackvar8gt8
                mov ds, 0x00
                mov di, 0x00
                mov a, cs
                or ci
                .mv csci, :LABEL010b
                jmp z, csci
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                mov a, 0x86
                cal :stackvar8gt8
            mov a, 0x00
            cal :stackvar8st8
                cal :FBDIO_PRINT0042
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
LABEL010b:      nop
LABEL010a:      nop
LABEL0102:      nop
                .mv csci, :LABEL0100
                xor a
                jmp z, csci
LABEL0101:      nop
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                .mv csci, :DATA010c
            mov a, 0x00
            cal :stackvar8st16
                cal :FPUTSNL0030
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
                mov a, 0x03
                cal :stackvar8gt8
                mov a, cs
                or ci
                .mv csci, :LABEL010d
                jmp z, csci
                kil
LABEL010d:      nop
    ;depth 2: STACKHEAD += 6
                    mov a, 0x06
                    cal :stackheadrll8
                cal :FEJECT00f2
    ;depth 1: STACKHEAD -= 6
                    mov a, 0x86
                    cal :stackheadrll8
                ret
;END OF FUNCTION main
;>>>>>>>>>>DATA SEGMENT<<<<<<<<<<<<<
DATA0043:      .db 'unknown error', 0x00
DATA0045:      .db 'fdd not ready', 0x00
DATA0047:      .db 'reading not allowed', 0x00
DATA0049:      .db 'file not found', 0x00
DATA004b:      .db 'execution not allowed', 0x00
DATA004d:      .db 'cat and file handle mismatch', 0x00
DATA004f:      .db 'not enough user memory', 0x00
DATA0051:      .db 'not all sectors loaded', 0x00
DATA0052:      .db 'error: %x %s%n', 0x00
DATA00b1:      .db '.', 0x00
DATA00e4:      .db '?', 0x00
DATA00e6:      .db 'A', 0x00
DATA00e9:      .db 'B', 0x00
DATA00ea:      .db '%s>', 0x00
DATA00ec:      .db '%s%n%s%n%s%n%s%n%s%n', 0x00
DATA00ed:      .db 'exit - stops entire system', 0x00
DATA00ee:      .db 'bcos - goes back to BCOS', 0x00
DATA00ef:      .db 'a:,b: - selects active drive', 0x00
DATA00f0:      .db 'help - prints this', 0x00
DATA00f1:      .db 'anything else - execute program from disk', 0x00
DATA00fb:      .db 'PRG', 0x00
DATA00fd:      .db 'bDOS 1.0 shell%n%w bytes free%nreading disc...', 0x00
DATA00ff:      .db 'error: 0x%x%n', 0x00
DATA0103:      .db 'exit', 0x00
DATA0105:      .db 'help', 0x00
DATA0107:      .db 'bcos', 0x00
DATA010c:      .db 'bye!', 0x00
;>>>>>>>>>>COMPILER ASM STDLIB for BCOS v1.0 on BC16 v1.0<<<<<<<<<<<<<
            mov a, 0xff
            mov a, 0xff
            mov a, 0xff
            mov a, 0xff
;=============
; OS_METACALL(a) - calls given bcos subroutine indirectly
;           - other registers as required
; OUT:      - as returned
            .def os_metacall, 0x0008
;=============
; FATAL(a) - prints error message and stops
; IN:   a - error code
;   stack - as error address
; OUT:  KILL, messed stack
            .def fatal, 0x04ea
;=============
; PRINTHEX4(a) - prints hex number from 0 to f
; IN:    a - number to print
; OUT:   a - unchanged      10 -> 0 -> 41
;       cs - set to 1
            .def printhex4, 0x0349
;=============
; PRINTHEX8(a) - prints hex number 
; IN:    a - number to print
; OUT:   a - set to lower half
;     csci - unchanged
;     dsdi - unchanged
printhex8:      psh ci
                mov ci, 0x04
                psh ci
                pop f
                pop ci
                cal :os_metacall
                ret  
;=============
; PRINTHEX16(csci) - prints hex number 4 digits
; IN:    csci - hex number 4 digits
; OUT:   csci - unchanged
;           a - ci
printhex16:     mov a, 0x05
                psh a
                pop f
                cal :os_metacall
                ret 
;=============
; INC16(dsdi) - increase 16bit number correctly
; IN:    dsdi - number 16bit, break if exceeds 16bit
; OUT:   dsdi - add 1
;           a - di + 1 or ds + 1
inc16:          mov a, 0x06
                psh a
                pop f
                cal :os_metacall
                ret 
;=============
; DEC16(dsdi) - decrease 16bit number correctly
; IN:    dsdi - number 16bit, break if lower than 0
; OUT:   dsdi - sub 1
;           a - di - 1 or ds - 1
dec16:          mov a, 0x07
                psh a
                pop f
                cal :os_metacall
                ret  
;=============
; POKE16(#dsdi, csci) - stores csci value under #dsdi address (2 bytes)
; IN:   dsdi - address to store
;       csci - value to store
; OUT:  dsdi - address to store + 1
;       csci - unchanged
;       a    - rubbish
poke16:         mov a, 0x09
                psh a
                pop f
                cal :os_metacall
                ret          
;=============
; PEEK16(#dsdi) - returns value under dsdi address (2 bytes)
; IN:   dsdi - address to read
; OUT:  dsdi - address to read + 1
;       csci - value
;       a    - rubbish
peek16:         mov a, 0x0a
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; ADD16(csci,dsdi) - returns value
;                    return os error 0x12 in case of overflow                
; IN:   csci - argument 1
;       dsdi - argument 2
; OUT:  csci - sum of csci and dsdi
;       a    - rubbish
add16:          mov a, 0x0b
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; SUB16(csci,dsdi) - returns value 
;                    return os error 0x13 in case of overflow                
; IN:   csci - argument 1
;       dsdi - argument 2
; OUT:  csci - substracts dsdi from csci
;       a    - rubbish
sub16:          mov a, 0x0c
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; MUL16(csci,dsdi) - returns value 
;                    return os error 0x12 in case of overflow                
; IN:   csci - argument 1
;       dsdi - argument 2
; OUT:  csci - mutiplies csci by dsdi
;       dsdi - unchanged
;       a    - rubbish
mul16:          mov a, 0x1f
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; DIV16(csci,dsdi) - returns value 
;                    return os error 0x13 in case of overflow                
; IN:   csci - argument 1
;       dsdi - argument 2
; OUT:  csci - divides csci by dsdi
;       dsdi - unchanged
;       a    - rubbish
div16:          mov a, 0x20
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; READSTR(#dsdi, ci) - reads characters to the buffer
; IN:   dsdi - buffer address for chars
;         ci - length of the buffer (since last char has to be 0x00 we can enter one less)
; OUT:  dsdi - preserved
;         ci - preserved
;         cs - how many chars can we could still add
readstr:        mov a, 0x0d
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; NEXTWORD(dsdi) - moves to the end of current word
; IN:     dsdi - char buffer address
; OUT:    dsdi - address of the next word or end of buffer
;            a - >0 if next word exist
nextword:       mov a, 0x12
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; NEXTVAL8(dsdi) - moves until expected value
; IN:     dsdi - char buffer address
;           ci - expected 8bit value
;           cs - max length to check
; OUT:    dsdi - address of the next byte or end of buffer
;           cs - how much was left to end of buffer
;           ci - unchanged
;            a - >0 if value was found
nextval8:       mov a, 0x13
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; #11: UPCHAR(a) - if a is an a-z char returns A-Z
; IN:     a - char code
; OUT:    a - char code A-Z or same
;         ci - old a val
upchar:         psh a
                mov a, 0x11
                psh a
                pop f
                pop a
                cal :os_metacall
                ret                
;=============
; STR_CPY(csci,dsdi)  - copy string from dsdi to csci
; IN: dsdi - source  
;     csci - desc
; OUT: dsdi = source + length + 1
str_cpy:        mov a, 0x17
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; STR_LEN8(dsdi)  - length of the string ending with 0x00
; IN: dsdi - source  
;     cs   - max length
; OUT: dsdi - preserved, cs = rubbish, ci = actual length
str_len8:       mov a, 0x18
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; PARSEHEX4(#dsdi) - parses single char to hex number chars 0-9 and a-z and A-Z are supported
; IN:   dsdi - buffer address for char-hex
; OUT:     a - 0 if ok, 0xff if parse error
;         ci - hexval of a char
parsehex4:      mov a, 0x0e
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; PARSEHEX8(#dsdi) - parses two char to hex number
; IN:   dsdi - buffer address for char
; OUT:    a - success = 0 or >0 error
;        ci - hex value for byte
;      dsdi - moved + 2 if ok
parsehex8:      mov a, 0x0f
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; PARSEHEX16(#dsdi) - parses four char to hex number
; IN:   dsdi - buffer address for char
; OUT:  csci - hex value for value
;          a - success = 0 or error code
;       dsdi - moved + 4 if ok
parsehex16:     mov a, 0x10
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; PRINT_NEWLINE - prints new line
; IN:
; OUT:   a - rubbish
print_newline:  mov a, 0x00
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; PRINTSTR(*dsdi) - sends chars to printer
; IN: dsdi - address of 0-ended char table
; OUT:   a - set to 0x00
;       ci - set to 0x01
;     dsdi - set to end of char table
printstr:       mov a, 0x02
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; GT16(csci,dsdi) - compares csci with dsdi            
; IN:   csci - argument 1
;       dsdi - argument 2
; OUT:  a - 1 if csci > dsdi
;       a - 0 otherwise
gt16:           mov a, 0x21
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; GTEQ16(csci,dsdi) - compares csci with dsdi            
; IN:   csci - argument 1
;       dsdi - argument 2
; OUT:  a - 1 if csci >= dsdi
;       a - 0 otherwise
gteq16:         mov a, 0x22
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; EQ16(csci,dsdi) - compares csci with dsdi            
; IN:   csci - argument 1
;       dsdi - argument 2
; OUT:  a - 1 if csci == dsdi
;       a - 0 otherwise
eq16:           mov a, 0x23
                psh a
                pop f
                cal :os_metacall
                ret
;=============
; STACKOFFSCALC(csci,a) - modifies SYS_STACKHEAD by csci and stores new value back in csci
; IN: csci - value to increase
;        a - 0x00 - add
;            0x01 - sub
; OUT:csci - value of SYS_STACKHEAD with offset
;     dsdi - address of SYS_STACKHEAD
;        a - rubbish
stackoffscalc: psh a
               psh cs
               psh ci
               .mv dsdi, :sys_stackhead
               cal :peek16
               pop di
               pop ds
               pop a
               and a
               jmr nz, :stoffclc_sub
               cal :add16
               xor a
               jmr z, :stoffclc_end
stoffclc_sub:  cal :sub16  
stoffclc_end:  .mv dsdi, :sys_stackhead
               ret
;=============
; STACKOFFSCLC8(a) - modifies SYS_STACKHEAD by a and stores new value back in csci, if a > 128 then this is to be substracted
; IN:    a - value to increase
;        a - 0x00 - add
;            0x80 - sub
; OUT:csci - value of SYS_STACKHEAD with offset
;     dsdi - address of SYS_STACKHEAD
;        a - rubbish
stackoffsclc8: psh a
               psh a
               .mv dsdi, :sys_stackhead
               cal :peek16
               pop a
               and 0x80
               jmr nz, :stoffcl8_sub
               mov ds, 0x00
               pop di
               cal :add16
               xor a
               jmr z, :stoffcl8_end
stoffcl8_sub:  pop a
               and 0x7f
               mov di, a
               mov ds, 0x00
               cal :sub16  
stoffcl8_end:  .mv dsdi, :sys_stackhead
               ret
;=============
; STACKHEADROLL(csci, a) - modifies SYS_STACKHEAD by csci and saves new value
; IN: csci - value to increase
;        a - 0x00 - add
;            0x01 - sub
; OUT:csci - value of SYS_STACKHEAD
;     dsdi - address of SYS_STACKHEAD
;        a - rubbish
stackheadroll: cal :stackoffscalc
               cal :poke16
               .mv dsdi, :sys_stackhead
               ret
;=============
; STACKHEADRLL8(a) - modifies SYS_STACKHEAD by csci and saves new value
; IN:    a - value to increase
;        a - 0x00 - add
;            0x80 - sub
; OUT:csci - value of SYS_STACKHEAD
;     dsdi - address of SYS_STACKHEAD
;        a - rubbish
stackheadrll8: psh cs
               psh ci
               cal :stackoffsclc8
               cal :poke16
               .mv dsdi, :sys_stackhead
               pop ci
               pop cs
               ret
;=============
; STACKVARGET8(dsdi, a) - loads value of the variable of given offset dsdi from SYS_STACKHEAD to csci
; IN: dsdi - offset from SYS_STACKHEAD
;        a - 0x00 - add
;            0x01 - sub
; OUT:ci - value of variable
;     cs - set to 0
;     dsdi - address of SYS_STACKHEAD
;        a - rubbish
stackvarget8:  mov cs, ds
               mov ci, di
               cal :stackoffscalc   
               mov a, #csci
               mov cs, 0x00
               mov ci, a
               ret
;=============
; STACKVARGET16(dsdi, a) - loads value of the variable of given offset dsdi from SYS_STACKHEAD to csci
; IN: dsdi - offset from SYS_STACKHEAD
;        a - 0x00 - add
;            0x01 - sub
; OUT:csci - value of variable
;     dsdi - address of variable + 1
;        a - rubbish
stackvarget16: mov cs, ds
               mov ci, di
               cal :stackoffscalc
               mov ds, cs
               mov di, ci   
               cal :peek16
               ret
;=============
; STACKVARSET8(ci,dsdi, a) - loads value of the variable of given offset from SYS_STACKHEAD to csci
; IN: ci - value
;     dsdi - offset from SYS_STACKHEAD
;        a - 0x00 - add
;            0x01 - sub
; OUT:csci - value of variable
;     dsdi - address of SYS_STACKHEAD
;        a - ci
stackvarset8:  psh ci
               mov cs, ds
               mov ci, di
               cal :stackoffscalc   
               pop a
               mov #csci, a
               ret
;=============
; STACKVARSET16(csci,dsdi, a) - loads value of the variable of given offset from SYS_STACKHEAD to csci
; IN: csci - value
;     dsdi - offset from SYS_STACKHEAD
;        a - 0x00 - add
;            0x01 - sub
; OUT:csci - value
;     dsdi - address of variable + 1
;        a - ci
stackvarset16: psh cs
               psh ci
               mov cs, ds
               mov ci, di
               cal :stackoffscalc   
               mov ds, cs
               mov di, ci
               pop ci
               pop cs
               cal :poke16
               ret
;=============
; STACKVAR8GT8(a) - loads value of the variable of given offset a from SYS_STACKHEAD to csci
; IN:    a - offset from SYS_STACKHEAD
;        a - 0x00 - add
;            0x80 - sub
; OUT:  ci - value of variable
;       cs - set to 0
;     dsdi - address of SYS_STACKHEAD
;        a - same as ci
stackvar8gt8:  cal :stackoffsclc8   
               mov a, #csci
               mov cs, 0x00
               mov ci, a
               ret
;=============
; STACKVAR8GT16(a) - loads value of the variable of given offset a from SYS_STACKHEAD to csci
; IN:    a - offset from SYS_STACKHEAD
;        a - 0x00 - add
;            0x80 - sub
; OUT:csci - value of variable
;     dsdi - address of variable + 1
;        a - rubbish
stackvar8gt16: cal :stackoffsclc8
               mov ds, cs
               mov di, ci   
               cal :peek16
               ret
;=============
; STACKVAR8ST8(ci, a) - loads value of the variable of given offset from SYS_STACKHEAD to csci
; IN: ci - value
;        a - offset from SYS_STACKHEAD
;        a - 0x00 - add
;            0x80 - sub
; OUT:  ci - value of variable
;     dsdi - address of SYS_STACKHEAD
;        a - ci
stackvar8st8:  psh ci
               cal :stackoffsclc8   
               pop a
               mov #csci, a
               ret
;=============
; STACKVAR8ST16(csci,a) - loads value of the variable of given offset from SYS_STACKHEAD to csci
; IN: csci - value
;        a - offset from SYS_STACKHEAD
;        a - 0x00 - add
;            0x80 - sub
; OUT:csci - value
;     dsdi - address of variable + 1
;        a - rubbish
stackvar8st16: psh cs
               psh ci
               cal :stackoffsclc8   
               mov ds, cs
               mov di, ci
               pop ci
               pop cs
               cal :poke16
               ret
;=============
; MSEEK(csci) - finds address of first free block of given size
; IN: csci - wanted size of the block
; OUT:csci - address after which free memory begins
;     dsdi - address of the block after which is enough free memory
mseek:      .mv dsdi, :sys_seektmp
            cal :poke16
            .mv dsdi, :sys_heaphead
            cal :peek16
            mov ds, cs
            mov di, ci
mseek_loop: psh ds
            psh di
            cal :peek16
            psh cs
            psh ci
            cal :inc16
            cal :peek16
            pop f
            pop a
            psh cs
            psh ci
            psh a
            psh f
            cal :inc16           
            mov a, ci
            or cs
            jmr z, :mseek_end
            cal :sub16
            pop di
            pop ds
            cal :sub16
            psh cs
            psh ci
            .mv dsdi, :sys_seektmp
            cal :peek16
            mov ds, cs
            mov di, ci
            pop ci
            pop cs
            cal :gteq16
            jmr nz, :mseek_ret
            pop di
            pop ds
            pop a
            pop a
            xor a
            jmr z, :mseek_loop
mseek_end:  pop a
            pop a
            pop a
            pop a
            pop a
            pop a
            mov cs, ds
            mov ci, di            
            ret
mseek_ret:  pop di
            pop ds
            pop ci
            pop cs
            ret
;=============
; MFILL(csci,dsdi, a) - fills memory starting from dsdi for csci bytes of value a
; IN: csci - length
;     dsdi - address of memory
;        a - value to fill
mfill:      psh a
mfill_loop: mov a, cs
            or ci
            jmr z, :mfill_ret
            pop a
            psh a
            mov #dsdi, a
            cal :inc16
            psh ds
            psh di
            mov ds, cs
            mov di, ci
            cal :dec16
            mov cs, ds
            mov ci, di
            pop di
            pop ds
            xor a
            jmr z, :mfill_loop
mfill_ret:  pop a
            ret
; OUT:csci - address after which free memory begins
;     dsdi - address of the block after which is enough free memory
;=============
; MEM_CPY(csci,dsdi, af)  - copy block of memory from csci to dsdi for at most af bytes
; IN: dsdi - source  
;     csci - desc
;       af - length
; OUT: dsdi = destroyed
;      csci = desc + length + 1
mem_cpy:    psh f
            psh a
mem_cpy_lop:psh cs
            psh ci
            mov a, cs
            or ci
            jmr z, :mem_cpy_end
            mov a, #dsdi
            psh a
            cal :inc16
            pop a
            mov cs, ds
            mov ci, di
            pop di
            pop ds
            psh cs
            psh ci
            mov #dsdi, a
            cal :inc16
            mov cs, ds
            mov ci, di
            pop di
            pop ds
            pop a
            pop f
            psh ds
            psh di
            psh f
            psh a
            pop ds
            pop di
            cal :dec16
            psh ds
            psh di
            pop f
            pop a
            psh f
            psh a
            xor a
            jmr z, :mem_cpy_lop
mem_cpy_end:pop ci
            pop cs
            pop a
            pop f
            ret
;=============
; strncpy(csci,dsdi, a)  - copy string from dsdi to csci for at most a bytes, or end of string
; IN: dsdi - source  
;     csci - desc
;        a - length
; OUT: dsdi = desc + length + 1
;      csci = source + length
strncpy:    and a
            jmr z, :strncpy_ret
strncpy_lop:psh a
            mov a, #dsdi
            jmr z, :strncpy_end
            psh a
            cal :inc16
            pop a
            psh ds
            psh di
            mov #csci, a
            mov ds, cs
            mov di, ci
            cal :inc16
            mov cs, ds
            mov ci, di
            pop di
            pop ds
            pop a
            dec a
            jmr nz, :strncpy_lop
            jmr z, :strncpy_ret
strncpy_end:pop a
strncpy_ret:ret
;=============
;SYS DATA
            .def var_promptbuf, 0x0bcf
            .def var_user_mem, 0x0bcb
sys_stdprntf:.db 0x00, 0x00
sys_seektmp: .db 0x00, 0x00 
sys_heaphead:  .db 0x4f, 0x40
sys_stackhead: nop
